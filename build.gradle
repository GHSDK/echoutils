plugins {
    id 'com.android.library'
    id 'kotlin-android'
}
def pathFile=file("./")
def gitCommitHash = 'git log  -1 --pretty="%H"'.execute([], pathFile).text.trim()
def gitLog = new String('git log  -1 --pretty="%s"'.execute([],pathFile).text.trim().replaceAll("\n", "").getBytes(), "utf-8")
def branch = new String('git branch --show-current'.execute([], pathFile).text.trim().replaceAll("\n", "").getBytes(), "utf-8")
def time = new Date().format("yyyy-MM-dd HH:mm:ss").toString()
def theVersionCode = '1.2.0'
def theVersionName = 'echo.utils.' + theVersionCode
android {
    compileSdk 33

    defaultConfig {
        minSdk 19
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "build_time", "\"$time\""
        buildConfigField "String", "build_branch", "\"$branch\""
        buildConfigField "String", "build_sha", "\"$gitCommitHash\""
        buildConfigField "String", 'VERSION_CODE', "\"$theVersionCode\""
        buildConfigField 'String', 'VERSION_NAME', "\"$theVersionName\""
        resValue("string", "echo_log_tag", "EchoLog")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            java {
                include '**/*.java'
                include '**/*.kt'
            }
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.scottyab:secure-preferences-lib:0.1.7'
//    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'  //等minSdk改到23后换这个
    implementation 'com.google.code.gson:gson:2.9.1'

    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-android', version: '1.6.4'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'androidx.activity:activity-ktx:1.4.0'

    //fb分享
    compileOnly 'com.facebook.android:facebook-share:13.0.0'
    //tw分享
    compileOnly 'com.twitter.sdk.android:twitter:3.3.0'

    ///google 支付渠道
    compileOnly 'com.android.billingclient:billing:6.0.1'
}

//***************************** 打包发布 *****************************************
apply plugin: 'maven-publish'
apply plugin: 'signing'
///说明文档
def DESCRIPTION = '2023/9/1 把支付主要逻辑加入'
def VERSION = theVersionCode

//Executing tasks: [publishMainPublicationToMavenRepository] in project E:\workdata\SDK\Gh_TW\twsdk
//在javadoc 的时候可能会有中文乱码以及说GBK无法转化  需要在环境变量中年添加 变量:JAVA_TOOL_OPTIONS     值：-Dfile.encoding=UTF-8
task publishingTWSDK(dependsOn: ['publishMainPublicationToMavenRepository']) {
    doLast {
        println("+++++++++publishing echoutils+++++++++" + file('./').absolutePath)
    }
}
afterEvaluate {
    publishing {
        repositories {
            //本地
//            maven {
//                url = "file://${file("../GHSDKJP_Android/").absolutePath}"
//            }

            //tw也得用
            maven {
                url = "file://${file("E:/workdata/SDK/Gh_TW/GHSDK_TW_Android").absolutePath}"
            }
            //home TW
//            maven {
//                url = "file://${file("J:/workdata/GAME_HOURS_TW_Android/GHSDK_TW_Android").absolutePath}"
//            }
            //home JP
//            maven {
//                url = "file://${file("J:/workdata/GHSDK_JP_Android_Source/GHSDKJP_Android").absolutePath}"
//            }

            //maven  https://issues.sonatype.org/browse/OSSRH-84327?filter=-4
//            maven {
//                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//                credentials {
//                    username "361170803@qq.com" // ossrhUsername is your sonatype username
//                    password "87nbWq26r%P#!S6" // ossrhUsername is your sonatype password
//                }
//            }
        }
        publications {
            Main(MavenPublication) {
                // The following applies a component to this publication
                // which results in publishing an app bundle.
                from components.release
                groupId = 'io.github.ghsdk'
                artifactId = 'echoutils'
                version = VERSION

                task androidJavadocs(type: Javadoc) {
                    source = android.sourceSets.main.java.source
                    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
                    excludes = ['**/*.kt']
                }
                task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
                    classifier = 'javadoc'
                    from androidJavadocs.destinationDir
                }

                task androidSourcesJar(type: Jar) {
                    classifier = 'sources'
                    from android.sourceSets.main.java.source
                }
                artifact(androidSourcesJar)
                artifact(androidJavadocsJar)
                pom {
                    description = DESCRIPTION
                    name = 'ECHO UTILS'
                    description = '包含了log工具，分享工具等通用工具'
                    url = 'https://github.com/GHSDK/echoutils'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'echo'
                            name = 'dongjunjie'
                            email = '361170803@qq.com'
                        }
                    }

                    scm {
                        connection = 'https://github.com/GHSDK/echoutils.git'
                        developerConnection = 'https://github.com/GHSDK/echoutils.git'
                        url = 'https://github.com/GHSDK/echoutils'
                    }
                    properties = [
                            'git-Log'       : gitLog,
                            'git-branch'    : branch,
                            'git-CommitHash': gitCommitHash,
                            'build-time'    : time
                    ]
                }
            }
        }
    }

    signing {
        sign publishing.publications.Main
    }
}

